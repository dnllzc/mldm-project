{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1214de73",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-05-18T13:31:14.644505Z",
     "iopub.status.busy": "2024-05-18T13:31:14.643672Z",
     "iopub.status.idle": "2024-05-18T13:31:17.086363Z",
     "shell.execute_reply": "2024-05-18T13:31:17.085392Z"
    },
    "papermill": {
     "duration": 2.451044,
     "end_time": "2024-05-18T13:31:17.089003",
     "exception": false,
     "start_time": "2024-05-18T13:31:14.637959",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.metrics import silhouette_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3278f747",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-18T13:31:17.098179Z",
     "iopub.status.busy": "2024-05-18T13:31:17.097577Z",
     "iopub.status.idle": "2024-05-18T13:31:17.119444Z",
     "shell.execute_reply": "2024-05-18T13:31:17.118356Z"
    },
    "papermill": {
     "duration": 0.029773,
     "end_time": "2024-05-18T13:31:17.122271",
     "exception": false,
     "start_time": "2024-05-18T13:31:17.092498",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv('/kaggle/input/dog-breeds/breed_traits.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8faed633",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-18T13:31:17.130564Z",
     "iopub.status.busy": "2024-05-18T13:31:17.129571Z",
     "iopub.status.idle": "2024-05-18T13:31:17.136711Z",
     "shell.execute_reply": "2024-05-18T13:31:17.135551Z"
    },
    "papermill": {
     "duration": 0.013688,
     "end_time": "2024-05-18T13:31:17.139013",
     "exception": false,
     "start_time": "2024-05-18T13:31:17.125325",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Defining columns\n",
    "numerical_cols = ['Affectionate With Family', 'Good With Young Children', 'Good With Other Dogs',\n",
    "                  'Shedding Level', 'Coat Grooming Frequency', 'Drooling Level',\n",
    "                  'Openness To Strangers', 'Playfulness Level', 'Watchdog/Protective Nature',\n",
    "                  'Adaptability Level', 'Trainability Level', 'Energy Level', 'Barking Level',\n",
    "                  'Mental Stimulation Needs']\n",
    "\n",
    "categorical_cols = ['Coat Type', 'Coat Length']\n",
    "\n",
    "# Create a preprocessor\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('num', StandardScaler(), numerical_cols),\n",
    "        ('cat', OneHotEncoder(), categorical_cols)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ae44242d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-18T13:31:17.147042Z",
     "iopub.status.busy": "2024-05-18T13:31:17.146286Z",
     "iopub.status.idle": "2024-05-18T13:32:15.490257Z",
     "shell.execute_reply": "2024-05-18T13:32:15.488277Z"
    },
    "papermill": {
     "duration": 58.353028,
     "end_time": "2024-05-18T13:32:15.495062",
     "exception": false,
     "start_time": "2024-05-18T13:31:17.142034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Silhouette Score: 0.13044188687048086 Clusters: 2\n",
      "Silhouette Score: 0.09926476500572469 Clusters: 3\n",
      "Silhouette Score: 0.0987912221532353 Clusters: 4\n",
      "Silhouette Score: 0.10525422818523733 Clusters: 5\n",
      "Silhouette Score: 0.0976599186560158 Clusters: 6\n",
      "Silhouette Score: 0.09853256310035094 Clusters: 7\n",
      "Silhouette Score: 0.08580509915375358 Clusters: 8\n",
      "Silhouette Score: 0.0879886383077105 Clusters: 9\n",
      "Silhouette Score: 0.0840136446907696 Clusters: 10\n",
      "Silhouette Score: 0.09246907873850657 Clusters: 11\n",
      "Silhouette Score: 0.09618509626666726 Clusters: 12\n",
      "Silhouette Score: 0.08339570361614895 Clusters: 13\n",
      "Silhouette Score: 0.08335377147969968 Clusters: 14\n",
      "Silhouette Score: 0.08788960030649141 Clusters: 15\n",
      "Silhouette Score: 0.08433101538773166 Clusters: 16\n",
      "Silhouette Score: 0.0951872975050292 Clusters: 17\n",
      "Silhouette Score: 0.08911471484939539 Clusters: 18\n",
      "Silhouette Score: 0.09032773497956527 Clusters: 19\n",
      "Silhouette Score: 0.08438345205155341 Clusters: 20\n",
      "Silhouette Score: 0.09017623710266771 Clusters: 21\n",
      "Silhouette Score: 0.09676902666768551 Clusters: 22\n",
      "Silhouette Score: 0.08699582545335895 Clusters: 23\n",
      "Silhouette Score: 0.08434681614590372 Clusters: 24\n",
      "Silhouette Score: 0.09595439269536392 Clusters: 25\n",
      "Silhouette Score: 0.09021878604611074 Clusters: 26\n",
      "Silhouette Score: 0.08355465719668755 Clusters: 27\n",
      "Silhouette Score: 0.08911761623530462 Clusters: 28\n",
      "Silhouette Score: 0.09098658302779447 Clusters: 29\n",
      "Silhouette Score: 0.08729847159754597 Clusters: 30\n",
      "Silhouette Score: 0.09984408935155431 Clusters: 31\n",
      "Silhouette Score: 0.09053262075217729 Clusters: 32\n",
      "Silhouette Score: 0.0896704231228242 Clusters: 33\n",
      "Silhouette Score: 0.08899351405193619 Clusters: 34\n",
      "Silhouette Score: 0.09398895220625518 Clusters: 35\n",
      "Silhouette Score: 0.10137599156139948 Clusters: 36\n",
      "Silhouette Score: 0.09125520961748208 Clusters: 37\n",
      "Silhouette Score: 0.09067192300246034 Clusters: 38\n",
      "Silhouette Score: 0.08886069482106601 Clusters: 39\n",
      "Silhouette Score: 0.07642840082556615 Clusters: 40\n",
      "Silhouette Score: 0.09258393500017162 Clusters: 41\n",
      "Silhouette Score: 0.09675905985964812 Clusters: 42\n",
      "Silhouette Score: 0.09097388269242679 Clusters: 43\n",
      "Silhouette Score: 0.08753449563397034 Clusters: 44\n",
      "Silhouette Score: 0.08620384795297087 Clusters: 45\n",
      "Silhouette Score: 0.10095812823722423 Clusters: 46\n",
      "Silhouette Score: 0.08848047902368643 Clusters: 47\n",
      "Silhouette Score: 0.09183978546711329 Clusters: 48\n",
      "Silhouette Score: 0.09589625109121473 Clusters: 49\n",
      "Silhouette Score: 0.08165520574851029 Clusters: 50\n",
      "Silhouette Score: 0.0965062681612391 Clusters: 51\n",
      "Silhouette Score: 0.09345259588097023 Clusters: 52\n",
      "Silhouette Score: 0.08900918418475026 Clusters: 53\n",
      "Silhouette Score: 0.08601332960708397 Clusters: 54\n",
      "Silhouette Score: 0.10660115238208202 Clusters: 55\n",
      "Silhouette Score: 0.09876743930635887 Clusters: 56\n",
      "Silhouette Score: 0.09355433278886705 Clusters: 57\n",
      "Silhouette Score: 0.0908657368352837 Clusters: 58\n",
      "Silhouette Score: 0.08909852543248441 Clusters: 59\n",
      "Silhouette Score: 0.09493381751306129 Clusters: 60\n",
      "Silhouette Score: 0.09507033488045748 Clusters: 61\n",
      "Silhouette Score: 0.09895948270547757 Clusters: 62\n",
      "Silhouette Score: 0.0932574272997424 Clusters: 63\n",
      "Silhouette Score: 0.09679641576356363 Clusters: 64\n",
      "Silhouette Score: 0.10012746690134709 Clusters: 65\n",
      "Silhouette Score: 0.09128175842995041 Clusters: 66\n",
      "Silhouette Score: 0.10107617637588051 Clusters: 67\n",
      "Silhouette Score: 0.10108379780037412 Clusters: 68\n",
      "Silhouette Score: 0.10415950239166541 Clusters: 69\n",
      "Silhouette Score: 0.08763203035292629 Clusters: 70\n",
      "Silhouette Score: 0.10076404127125356 Clusters: 71\n",
      "Silhouette Score: 0.10651906208957328 Clusters: 72\n",
      "Silhouette Score: 0.09814875804323016 Clusters: 73\n",
      "Silhouette Score: 0.09957336879069076 Clusters: 74\n",
      "Silhouette Score: 0.0909227452938059 Clusters: 75\n",
      "Silhouette Score: 0.09793265147008587 Clusters: 76\n",
      "Silhouette Score: 0.10701410111481578 Clusters: 77\n",
      "Silhouette Score: 0.10002263040643788 Clusters: 78\n",
      "Silhouette Score: 0.10469394377916814 Clusters: 79\n",
      "Silhouette Score: 0.10551608315083066 Clusters: 80\n",
      "Silhouette Score: 0.10044356915982727 Clusters: 81\n",
      "Silhouette Score: 0.10005698405780411 Clusters: 82\n",
      "Silhouette Score: 0.10519509901264766 Clusters: 83\n",
      "Silhouette Score: 0.09922634974728725 Clusters: 84\n",
      "Silhouette Score: 0.10847163309831394 Clusters: 85\n",
      "Silhouette Score: 0.1115924179726809 Clusters: 86\n",
      "Silhouette Score: 0.10721210991434497 Clusters: 87\n",
      "Silhouette Score: 0.09943782337809828 Clusters: 88\n",
      "Silhouette Score: 0.1190160334062373 Clusters: 89\n",
      "Silhouette Score: 0.11042905909117699 Clusters: 90\n",
      "Silhouette Score: 0.10131900878288504 Clusters: 91\n",
      "Silhouette Score: 0.11279768880872278 Clusters: 92\n",
      "Silhouette Score: 0.10196972743784012 Clusters: 93\n",
      "Silhouette Score: 0.10625363482779208 Clusters: 94\n",
      "Silhouette Score: 0.11400581730379636 Clusters: 95\n",
      "Silhouette Score: 0.11142000823162994 Clusters: 96\n",
      "Silhouette Score: 0.11556592079109855 Clusters: 97\n",
      "Silhouette Score: 0.10257208563377547 Clusters: 98\n",
      "Silhouette Score: 0.11283525176090103 Clusters: 99\n",
      "Silhouette Score: 0.09853922685891307 Clusters: 100\n",
      "Silhouette Score: 0.10433831759886837 Clusters: 101\n",
      "Silhouette Score: 0.10875966277247935 Clusters: 102\n",
      "Silhouette Score: 0.10468061506166315 Clusters: 103\n",
      "Silhouette Score: 0.09988625550305137 Clusters: 104\n",
      "Silhouette Score: 0.11104443550048874 Clusters: 105\n",
      "Silhouette Score: 0.10723354947989357 Clusters: 106\n",
      "Silhouette Score: 0.10642336148234531 Clusters: 107\n",
      "Silhouette Score: 0.11022118959546721 Clusters: 108\n",
      "Silhouette Score: 0.10822530670721252 Clusters: 109\n",
      "Silhouette Score: 0.11368879027520226 Clusters: 110\n",
      "Silhouette Score: 0.11126920100909966 Clusters: 111\n",
      "Silhouette Score: 0.10540523236182636 Clusters: 112\n",
      "Silhouette Score: 0.11177536783226133 Clusters: 113\n",
      "Silhouette Score: 0.11152370866478134 Clusters: 114\n",
      "Silhouette Score: 0.09645378056267942 Clusters: 115\n",
      "Silhouette Score: 0.09854632725877839 Clusters: 116\n",
      "Silhouette Score: 0.10053064306253237 Clusters: 117\n",
      "Silhouette Score: 0.10361981735057524 Clusters: 118\n",
      "Silhouette Score: 0.1076329404976153 Clusters: 119\n",
      "Silhouette Score: 0.09568249725215575 Clusters: 120\n",
      "Silhouette Score: 0.10570769080996283 Clusters: 121\n",
      "Silhouette Score: 0.10382180915636617 Clusters: 122\n",
      "Silhouette Score: 0.1036128348919144 Clusters: 123\n",
      "Silhouette Score: 0.10074971593122733 Clusters: 124\n",
      "Silhouette Score: 0.11009588990412038 Clusters: 125\n",
      "Silhouette Score: 0.10057647386536935 Clusters: 126\n",
      "Silhouette Score: 0.10147513830302662 Clusters: 127\n",
      "Silhouette Score: 0.09104991195894535 Clusters: 128\n",
      "Silhouette Score: 0.10460750011359626 Clusters: 129\n",
      "Silhouette Score: 0.09874402376494436 Clusters: 130\n",
      "Silhouette Score: 0.09487389835466428 Clusters: 131\n",
      "Silhouette Score: 0.09710276624615546 Clusters: 132\n",
      "Silhouette Score: 0.10006834023090656 Clusters: 133\n",
      "Silhouette Score: 0.09405529052728714 Clusters: 134\n",
      "Silhouette Score: 0.10150476181380151 Clusters: 135\n",
      "Silhouette Score: 0.1008510150890449 Clusters: 136\n",
      "Silhouette Score: 0.10516960091866219 Clusters: 137\n",
      "Silhouette Score: 0.09444830918140078 Clusters: 138\n",
      "Silhouette Score: 0.09290502775413106 Clusters: 139\n",
      "Silhouette Score: 0.09465117181874073 Clusters: 140\n",
      "Silhouette Score: 0.08889899180617246 Clusters: 141\n",
      "Silhouette Score: 0.08517672655240889 Clusters: 142\n",
      "Silhouette Score: 0.09212814807351101 Clusters: 143\n",
      "Silhouette Score: 0.08771222217658768 Clusters: 144\n",
      "Silhouette Score: 0.09036261244376144 Clusters: 145\n",
      "Silhouette Score: 0.0960948047846033 Clusters: 146\n",
      "Silhouette Score: 0.09914702568357932 Clusters: 147\n",
      "Silhouette Score: 0.09193627967982668 Clusters: 148\n",
      "Silhouette Score: 0.08834219580820338 Clusters: 149\n",
      "Silhouette Score: 0.08999695059870196 Clusters: 150\n",
      "Silhouette Score: 0.0871468430656411 Clusters: 151\n",
      "Silhouette Score: 0.09071129075634932 Clusters: 152\n",
      "Silhouette Score: 0.08818235496119764 Clusters: 153\n",
      "Silhouette Score: 0.0854580904903159 Clusters: 154\n",
      "Silhouette Score: 0.08410364906792153 Clusters: 155\n",
      "Silhouette Score: 0.08101290520609807 Clusters: 156\n",
      "Silhouette Score: 0.08997126362907083 Clusters: 157\n",
      "Silhouette Score: 0.07899025757106497 Clusters: 158\n",
      "Silhouette Score: 0.0789397508311016 Clusters: 159\n",
      "Silhouette Score: 0.07902418509648947 Clusters: 160\n",
      "Silhouette Score: 0.0810980125357835 Clusters: 161\n",
      "Silhouette Score: 0.07551684415451039 Clusters: 162\n",
      "Silhouette Score: 0.07836558069052506 Clusters: 163\n",
      "Silhouette Score: 0.07549878847409261 Clusters: 164\n",
      "Silhouette Score: 0.07864515052954225 Clusters: 165\n",
      "Silhouette Score: 0.07473269244885712 Clusters: 166\n",
      "Silhouette Score: 0.07098208620149653 Clusters: 167\n",
      "Silhouette Score: 0.06823241373338457 Clusters: 168\n",
      "Silhouette Score: 0.07091889630994834 Clusters: 169\n",
      "Silhouette Score: 0.06879404935021347 Clusters: 170\n",
      "Silhouette Score: 0.06935973605724886 Clusters: 171\n",
      "Silhouette Score: 0.06584152292759242 Clusters: 172\n",
      "Silhouette Score: 0.06634696251858924 Clusters: 173\n",
      "Silhouette Score: 0.06312174263132264 Clusters: 174\n",
      "Silhouette Score: 0.06374262924980653 Clusters: 175\n",
      "Silhouette Score: 0.06099811732589008 Clusters: 176\n",
      "Silhouette Score: 0.060331668177978144 Clusters: 177\n",
      "Silhouette Score: 0.056895792765595476 Clusters: 178\n",
      "Silhouette Score: 0.057526852981254005 Clusters: 179\n",
      "Silhouette Score: 0.056807688124037595 Clusters: 180\n",
      "Silhouette Score: 0.055549462865715445 Clusters: 181\n",
      "Silhouette Score: 0.056803689836212305 Clusters: 182\n",
      "Silhouette Score: 0.05499732602232694 Clusters: 183\n",
      "Silhouette Score: 0.057989989196067925 Clusters: 184\n",
      "Silhouette Score: 0.05267408377351471 Clusters: 185\n",
      "Silhouette Score: 0.05572843976050889 Clusters: 186\n",
      "Silhouette Score: 0.047674920416147834 Clusters: 187\n",
      "Silhouette Score: 0.0434997663346766 Clusters: 188\n",
      "Silhouette Score: 0.041834065314792404 Clusters: 189\n",
      "Best silhouette score: 0.13044188687048086 Best number of clusters: 2\n",
      "Cluster\n",
      "0    105\n",
      "1     90\n",
      "Name: count, dtype: int64\n",
      "Silhouette Score: 0.13044188687048086\n"
     ]
    }
   ],
   "source": [
    "# Finding the best number of clusters using silhouette score\n",
    "best_score = -1\n",
    "best_num_cl = 2\n",
    "\n",
    "for num_cl in range(2, 190):\n",
    "    # Define the pipeline with preprocessor and KMeans model\n",
    "    pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n",
    "                               ('kmeans', KMeans(n_clusters=num_cl, random_state=42, n_init=10))])\n",
    "\n",
    "    # Fit the pipeline to the data\n",
    "    pipeline.fit(data)\n",
    "\n",
    "    # Predict the cluster labels\n",
    "    labels = pipeline.predict(data)\n",
    "\n",
    "    # Transform the data using the preprocessor\n",
    "    transformed_data = preprocessor.transform(data)\n",
    "\n",
    "    # Calculating the silhouette score\n",
    "    silhouette_avg = silhouette_score(transformed_data, labels)\n",
    "    print(\"Silhouette Score:\", silhouette_avg, \"Clusters:\", num_cl)\n",
    "\n",
    "    if silhouette_avg > best_score:\n",
    "        best_score = silhouette_avg\n",
    "        best_num_cl = num_cl\n",
    "\n",
    "print(\"Best silhouette score:\", best_score, \"Best number of clusters:\", best_num_cl)\n",
    "\n",
    "# Define the pipeline with preprocessor and KMeans model\n",
    "pipeline = Pipeline(steps=[('preprocessor', preprocessor),\n",
    "                           ('kmeans', KMeans(n_clusters=best_num_cl, random_state=42, n_init=10))])\n",
    "\n",
    "# Fit the pipeline to the data\n",
    "pipeline.fit(data)\n",
    "\n",
    "# Predict the cluster labels\n",
    "labels = pipeline.predict(data)\n",
    "\n",
    "# Adding the cluster labels to the DataFrame\n",
    "data['Cluster'] = labels\n",
    "\n",
    "# Printing the counts of each cluster\n",
    "print(data['Cluster'].value_counts())\n",
    "\n",
    "# Transform the data using the preprocessor\n",
    "transformed_data = preprocessor.transform(data)\n",
    "\n",
    "# Calculating the silhouette score\n",
    "silhouette_avg = silhouette_score(transformed_data, labels)\n",
    "print(\"Silhouette Score:\", silhouette_avg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49a2f5c5",
   "metadata": {
    "papermill": {
     "duration": 0.037795,
     "end_time": "2024-05-18T13:32:15.572169",
     "exception": false,
     "start_time": "2024-05-18T13:32:15.534374",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3768171,
     "sourceId": 6518380,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 64.566117,
   "end_time": "2024-05-18T13:32:16.226674",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-18T13:31:11.660557",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
